name: 'Sample Build & Test'
on:
  push:
    branches:
      - main
      - release/**
  pull_request:

permissions:
  contents: read
  actions: read

env:
  CACHED_DEPENDENCY_PATHS: |
    ${{ github.workspace }}/node_modules
  CACHED_BUILD_PATHS: |
    ${{ github.workspace }}/dist
  BUILD_CACHE_KEY: ${{ github.sha }}

jobs:
  job_wait_for_upstream:
    name: Wait for upstream artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Wait for Build & Test workflow
        # v1.4.0
        uses: lewagon/wait-on-check-action@0dceb95e7c4cad8cc7422aee3885998f5cab9c79
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: 'Build & Test'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          allowed-conclusions: success

  job_sample_build:
    name: Sample Build
    needs: job_wait_for_upstream
    runs-on: macos-latest
    strategy:
      matrix:
        include:
          - bump: 'v6'
          - bump: 'v7'
          - bump: 'sample-vue'
    steps:
      - name: Check out current commit (${{ github.sha }})
        uses: actions/checkout@v4
      - run: corepack enable
      - name: Set up Node
        uses: actions/setup-node@v5
      - name: Install yalc
        run: yarn  global add yalc
      - name: Install Ionic
        run: yarn  global add @ionic/cli

      - name: Download Sentry Capacitor package
        uses: actions/download-artifact@v4
        with:
          name: yalc-package
          path: ~/.yalc/packages/@sentry/capacitor/

      - name: Publish test broken node.
        working-directory: example/broken_node_module
        run: |
          yarn install
          yarn build
          yalc publish

      - name: Build Sample ${{ matrix.bump }}
        run: yarn run bump:${{ matrix.bump }}

      - name: Resolve sample directory
        id: resolve_sample
        run: |
          if [ "${{ matrix.bump }}" = "v6" ]; then echo "SAMPLE_DIR=ionic-angular-v6" >> "$GITHUB_ENV"; fi
          if [ "${{ matrix.bump }}" = "v7" ]; then echo "SAMPLE_DIR=ionic-angular-v7" >> "$GITHUB_ENV"; fi
          if [ "${{ matrix.bump }}" = "sample-vue" ]; then echo "SAMPLE_DIR=ionic-vue3" >> "$GITHUB_ENV"; fi

      - name: Determine Java version
        run: |
          if [ "${{ matrix.bump }}" = "v7" ]; then echo "JAVA_VERSION=21" >> "$GITHUB_ENV"; else echo "JAVA_VERSION=17" >> "$GITHUB_ENV"; fi

      - name: Set up Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Make gradlew executable
        working-directory: example/${{ env.SAMPLE_DIR }}/android
        run: chmod +x ./gradlew

      - name: Configure Android build compatibility
        working-directory: example/${{ env.SAMPLE_DIR }}/android
        run: |
          echo "android.useFullClasspathForDexingTransform=true" >> gradle.properties
          echo "android.enableR8.fullMode=false" >> gradle.properties

      - name: Android build (Gradle)
        working-directory: example/${{ env.SAMPLE_DIR }}/android
        env:
          GRADLE_OPTS: -Dorg.gradle.daemon=false
        run: ./gradlew --no-daemon assembleDebug

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SAMPLE_DIR }}-android-apk
          if-no-files-found: warn
          path: |
            example/${{ env.SAMPLE_DIR }}/android/app/build/outputs/apk/debug/*.apk

      - name: Install CocoaPods
        run: sudo gem install cocoapods --no-document

      - name: Install xcpretty
        run: sudo gem install xcpretty --no-document

      - name: iOS pod install
        working-directory: example/${{ env.SAMPLE_DIR }}/ios/App
        run: pod install --repo-update

      - name: iOS build (xcodebuild)
        working-directory: example/${{ env.SAMPLE_DIR }}/ios/App
        run: |
          xcodebuild -workspace App.xcworkspace \
                     -scheme App \
                     -configuration Debug \
                     -sdk iphonesimulator \
                     -destination 'platform=iOS Simulator,name=iPhone 15' \
                     build | xcpretty

      - name: Upload iOS build logs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SAMPLE_DIR }}-ios-build-logs
          if-no-files-found: warn
          path: |
            ~/Library/Logs/Diagnostics/*
