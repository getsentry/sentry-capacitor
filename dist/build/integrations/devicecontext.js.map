{"version":3,"file":"devicecontext.js","sourceRoot":"","sources":["../../../src/integrations/devicecontext.ts"],"names":[],"mappings":";;;AAAA,qCAAsE;AAEtE,uCAAuC;AAEvC,sCAAoC;AAEpC,uCAAuC;AACvC;IAAA;QAME;;WAEG;QACI,SAAI,GAAW,aAAa,CAAC,EAAE,CAAC;IA8BzC,CAAC;IA5BC;;OAEG;IACI,iCAAS,GAAhB;QAAA,iBAwBC;QAvBC,8BAAuB,CAAC,UAAO,KAAY;;;;;wBACnC,IAAI,GAAG,oBAAa,EAAE,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;wBAC3D,IAAI,CAAC,IAAI,EAAE;4BACT,sBAAO,KAAK,EAAC;yBACd;;;;wBAGkB,qBAAM,gBAAM,CAAC,yBAAyB,EAAE,EAAA;;wBAAnD,QAAQ,GAAG,SAAwC;wBACnD,OAAO,GAAI,QAAQ,CAAC,SAAS,CAAc,CAAC;wBAElD,KAAK,CAAC,QAAQ,yCAAQ,OAAO,GAAK,KAAK,CAAC,QAAQ,CAAE,CAAC;wBACnD,IAAI,MAAM,IAAI,QAAQ,EAAE;4BAChB,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;4BAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;gCACf,KAAK,CAAC,IAAI,wBAAQ,IAAI,CAAE,CAAC;6BAC1B;yBACF;;;;wBAED,cAAM,CAAC,GAAG,CAAC,+CAA6C,GAAG,CAAC,CAAC;;4BAG/D,sBAAO,KAAK,EAAC;;;aACd,CAAC,CAAC;IACL,CAAC;IArCD;;OAEG;IACW,gBAAE,GAAW,eAAe,CAAC;IAmC7C,oBAAC;CAAA,AAvCD,IAuCC;AAvCY,sCAAa","sourcesContent":["import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport type { Contexts, Event, Integration } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { NATIVE } from '../wrapper';\n\n/** Load device context from native. */\nexport class DeviceContext implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'DeviceContext';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = DeviceContext.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor(async (event: Event) => {\n      const self = getCurrentHub().getIntegration(DeviceContext);\n      if (!self) {\n        return event;\n      }\n\n      try {\n        const contexts = await NATIVE.fetchNativeDeviceContexts();\n        const context = (contexts['context'] as Contexts);\n\n        event.contexts = { ...context, ...event.contexts };\n        if ('user' in contexts) {\n          const user = contexts['user'];\n          if (!event.user) {\n            event.user = { ...user };\n          }\n        }\n      } catch (e) {\n        logger.log(`Failed to get device context from native: ${e}`);\n      }\n\n      return event;\n    });\n  }\n}\n"]}