{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { Breadcrumb, Package } from '@sentry/types';\n\nimport type { CapacitorOptions } from './options';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ninterface serializedObject {\n  [key: string]: string;\n}\n\nexport type NativeDeviceContextsResponse = {\n  [key: string]: Record<string, unknown>;\n};\n\nexport interface ISentryCapacitorPlugin {\n  addBreadcrumb(breadcrumb: Breadcrumb): void;\n  captureEnvelope(payload: { envelope: number[] }\n  ): PromiseLike<boolean>;\n\n  clearBreadcrumbs(): void;\n  crash(): void;\n  fetchNativeRelease(): Promise<{\n    build: string;\n    id: string;\n    version: string;\n  }>;\n  fetchNativeSdkInfo(): Promise<Package>;\n  fetchNativeDeviceContexts(): PromiseLike<NativeDeviceContextsResponse>;\n  getStringBytesLength(payload: { string: string }): Promise<{ value: number }>;\n  initNativeSdk(payload: { options: CapacitorOptions }): Promise<boolean>;\n  setUser(payload: {\n    defaultUserKeys: serializedObject | null;\n    otherUserKeys: serializedObject | null;\n  }): void;\n  setTag(payload: { key: string; value: string }): void;\n  setExtra(payload: { key: string; value: string }): void;\n  setContext(payload: { key: string; value: serializedObject | null }): void;\n}\n"]}